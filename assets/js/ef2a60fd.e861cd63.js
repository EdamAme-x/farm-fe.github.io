"use strict";(self.webpackChunkfarm_docs=self.webpackChunkfarm_docs||[]).push([[9498],{9613:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>g});var o=t(9496);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},i=Object.keys(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var l=o.createContext({}),p=function(n){var e=o.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},c=function(n){var e=p(n.components);return o.createElement(l.Provider,{value:e},n.children)},f="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,l=n.parentName,c=s(n,["components","mdxType","originalType","parentName"]),f=p(t),m=r,g=f["".concat(l,".").concat(m)]||f[m]||u[m]||i;return t?o.createElement(g,a(a({ref:e},c),{},{components:t})):o.createElement(g,a({ref:e},c))}));function g(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s[f]="string"==typeof n?n:r,a[1]=s;for(var p=2;p<i;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5595:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=t(1163),r=(t(9496),t(9613));const i={},a="Config Reference",s={unversionedId:"config/farm-config",id:"config/farm-config",title:"Config Reference",description:"Farm loads config from farm.config.ts or farm.config.js file under the project root, recommend to use farm.config.ts to get typing support easily.",source:"@site/docs/config/farm-config.md",sourceDirName:"config",slug:"/config/farm-config",permalink:"/docs/config/farm-config",draft:!1,editUrl:"https://github.com/farm-fe/farm-fe.github.io/docs/config/farm-config.md",tags:[],version:"current",frontMatter:{},sidebar:"configSidebar",next:{title:"CLI Options",permalink:"/docs/config/cli"}},l={},p=[{value:"Compilation Options",id:"compilation-options",level:2},{value:"Server Options",id:"server-options",level:2},{value:"Plugins Options",id:"plugins-options",level:2}],c={toc:p},f="wrapper";function u(n){let{components:e,...t}=n;return(0,r.kt)(f,(0,o.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"config-reference"},"Config Reference"),(0,r.kt)("p",null,"Farm loads config from ",(0,r.kt)("inlineCode",{parentName:"p"},"farm.config.ts")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"farm.config.js")," file under the project root, recommend to use ",(0,r.kt)("inlineCode",{parentName:"p"},"farm.config.ts")," to get typing support easily."),(0,r.kt)("p",null,"The config file look like: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { defineFarmConfig } from '@farmfe/core/dist/config';\n\nexport default defineFarmConfig({\n  root: process.cwd(), // config project root\n  // Options related compilation\n  compilation: {\n    // ...\n  },\n  // Options related to dev server\n  server: {\n    hmr: true,\n    // ...\n  },\n  // Additional plugins\n  plugins: []\n});\n")),(0,r.kt)("h2",{id:"compilation-options"},"Compilation Options"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The detail of each option will be completed later")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { defineFarmConfig } from '@farmfe/core/dist/config';\n\nexport default defineFarmConfig({\n  // Options related compilation\n  compilation: CompilationOptions;\n  // ..\n});\n\ninterface CompilationOptions {\n  input?: Record<string, string>;\n  output?: {\n    filename?: string;\n    path?: string;\n    publicPath?: string;\n  };\n  resolve?: {\n    extensions?: string[];\n    alias?: Record<string, string>;\n    mainFields?: string[];\n    conditions?: string[];\n    symlinks: boolean;\n  };\n  external?: string[];\n  mode?: 'development' | 'production';\n  runtime?: {\n    plugins?: string[]; // custom runtime plugin\n  };\n  // Options parsed to swc\n  script?: {\n    // specify target es version\n    target?:\n      | 'es3'\n      | 'es5'\n      | 'es2015'\n      | 'es2016'\n      | 'es2017'\n      | 'es2018'\n      | 'es2019'\n      | 'es2020'\n      | 'es2021'\n      | 'es2022';\n    // config swc parser\n    parser?: {\n      esConfig?: {\n        jsx?: boolean;\n        fnBind: boolean;\n        // Enable decorators.\n        decorators: boolean;\n\n        // babel: `decorators.decoratorsBeforeExport`\n        //\n        // Effective only if `decorators` is true.\n        decoratorsBeforeExport: boolean;\n        exportDefaultFrom: boolean;\n        // Stage 3.\n        importAssertions: boolean;\n        privateInObject: boolean;\n        allowSuperOutsideMethod: boolean;\n        allowReturnOutsideFunction: boolean;\n      };\n      tsConfig?: {\n        tsx: boolean;\n        decorators: boolean;\n        /// `.d.ts`\n        dts: boolean;\n        noEarlyErrors: boolean;\n      };\n    };\n  };\n  // Specify which modules to be bundled tother\n  partialBundling?: {\n    moduleBuckets?: {\n      name: string;\n      test: string[];\n    }[];\n  };\n  // Enable lazyCompilation or not\n  lazyCompilation?: boolean;\n};\n")),(0,r.kt)("h2",{id:"server-options"},"Server Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export default defineFarmConfig({\n  // Options related compilation\n  server: ServerOptions;\n  // ..\n});\n\ninterface ServerOptions {\n  https?: boolean;\n  port?: number;\n  hmr?: boolean;\n}\n")),(0,r.kt)("h2",{id:"plugins-options"},"Plugins Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export default defineFarmConfig({\n  // Options related compilation\n  plugins: (RustPlugin | JsPlugin)[];\n  // ..\n});\n\nexport type RustPlugin =\n  | string\n  | [\n      string,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Record<string, any>\n    ];\n\nexport interface JsPlugin {\n  resolve: JsPluginHook<\n    {\n      importers: string[];\n      specifiers: string[];\n    },\n    PluginResolveHookParam,\n    PluginResolveHookResult\n  >;\n\n  // load: JsPluginHook<{ filters: { ids: string[] }}>;\n}\n")))}u.isMDXComponent=!0}}]);